version: '3.8'
services:
  cygnet:
    # we do not need ports under traefik
    # ports:
    image: registry.sccs.swarthmore.edu/sccs/cygnet/cygnet:latest
    build:
      context: ./
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DOMAIN: https://cygnetv2.sccs.swarthmore.edu
    env_file:
      - .env
    volumes:
      - cygnet-photos:/usr/src/app/photos
    deploy:
      # this is required becuase of the its whitelist
      placement:
        constraints:
          - node.role == manager
      # instead of an apache config, we configure this host with container labels
      # traefik handles the rest
      labels:
        - 'traefik.enable=true'
        - 'traefik.docker.network=traefik'
        - 'traefik.http.routers.cygnet.entrypoints=https'
        - 'traefik.http.routers.cygnet.rule=(Host(`cygnetv2.sccs.swarthmore.edu`) && !PathPrefix(`/photos/`))'
        - 'traefik.http.routers.cygnet.tls=true'
        - 'traefik.http.routers.cygnet.tls.certresolver=letsEncrypt'
        - 'traefik.http.services.cygnet.loadbalancer.server.port=3000'
    command: "npm start"
    networks:
      - traefik
      - internal

  static:
    image: nginx
    restart: unless-stopped
    volumes:
      - cygnet-photos:/usr/share/nginx/html/photos
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - 'traefik.enable=true'
        - 'traefik.docker.network=traefik'
        - 'traefik.port=80'
        - 'traefik.http.routers.static.entrypoints=https'
        - 'traefik.http.routers.static.rule=(Host(`cygnetv2.sccs.swarthmore.edu`) && PathPrefix(`/photos/`))'
        - 'traefik.http.routers.static.tls=true'
        - 'traefik.http.routers.static.tls.certresolver=letsEncrypt'
        - 'traefik.http.services.static.loadbalancer.server.port=80'
    networks:
      - traefik
      - internal

  cygnet-db:
    image: mariadb:11.3
    volumes:
      - cygnet-overlay:/var/lib/mysql
    deploy:
      placement:
        constraints:
          - node.role == manager
    env_file:
      - .env
    networks:
      - internal # do not expose

# (re)define traefik proxy network
networks:
  internal:
  traefik:
    # defined elsewhere
    external: true

volumes:
  cygnet-overlay:
    name: cygnet-overlay
    driver_opts:
      type: nfs
      o: "nfsvers=4,addr=130.58.218.26,rw,nolock,soft"
      device: ":/volumes/cygnet-overlay"

  cygnet-photos:
    name: cygnet-photos
    driver_opts:
      type: nfs
      o: "nfsvers=4,addr=130.58.218.26,rw,nolock,soft"
      device: ":/volumes/cygnet-photos"
